name: Docker

on:
  schedule:
    - cron: '27 16 * * *'  # Zeitgesteuerte Ausf端hrung
  push:
    branches:
      - "master"            # Master-Branch
      - "vivaldi"           # Vivaldi-Branch
    tags: ['v*.*.*']         # Versionstags (optional)
  pull_request:
    branches:
      - "master"            # Pull Requests auf Master
      - "vivaldi"           # Pull Requests auf Vivaldi (Hinzugef端gt)

env:
  REGISTRY: ghcr.io              # Docker Registry (GitHub Container Registry)
  IMAGE_NAME: ${{ github.repository }}  # Repository-Name (z.B. username/repo)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install cosign tool (used for signing images)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login to Docker Registry (GitHub Container Registry)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract Docker metadata (tags, labels)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,ref-name      # Tag f端r den Branch-Namen
            type=sha               # Tag f端r den Commit-Hash
            type=version,semver    # Optional: Semver-Tags (falls verwendet)

      # Build and push Docker image (don't push on pull requests)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}  # Nur pushen, wenn es kein PR ist
          tags: ${{ steps.meta.outputs.tags }}  # Tags verwenden, die aus metadata-action extrahiert wurden
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image (optional, if you want to sign the image)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
